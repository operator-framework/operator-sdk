---
- name: Create the v1.Secret
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: test-secret
        namespace: '{{ namespace }}'
        labels:
          reconcile: "yes"
      data:
        test: '{{ "test" | b64encode }}'

- name: Wait for the corresponding configmap to be created
  k8s_info:
    api_version: v1
    kind: ConfigMap
    name: test-secret
    namespace: '{{ namespace }}'
  register: result
  until: result.resources
  retries: 10

- name: Assert that the configmap has the proper content
  assert:
    that: result.resources.0.data.test == "test"

- name: Update the v1.Secret
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: test-secret
        namespace: '{{ namespace }}'
        labels:
          reconcile: "yes"
      data:
        new: '{{ "content" | b64encode }}'

- name: Wait for the corresponding key to be created
  k8s_info:
    api_version: v1
    kind: ConfigMap
    name: test-secret
    namespace: '{{ namespace }}'
  register: result
  until: result.resources.0.data.new is defined
  retries: 10

- name: Assert that the configmap has the proper content
  assert:
    that: result.resources.0.data.new == 'content'
