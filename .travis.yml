language: go
go_import_path: github.com/operator-framework/operator-sdk
sudo: required

services:
- docker

go:
- 1.10.1

before_script:
- curl -Lo dep https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64 && chmod +x dep && sudo mv dep /usr/local/bin/
- dep ensure
# Download kubectl, which is a requirement for using minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.1/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# Configure insecure docker registry for openshift
- sudo service docker stop
- sudo sed -i 's/DOCKER_OPTS=\"/DOCKER_OPTS=\"--insecure-registry 172.30.0.0\/16 /' /etc/default/docker
- sudo service docker start
# Download oc to spin up openshift on local docker instance
- curl -Lo oc.tar.gz https://github.com/openshift/origin/releases/download/v3.10.0/openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit.tar.gz
# Put oc binary in path
- tar xvzOf oc.tar.gz openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit/oc > oc && chmod +x oc && sudo mv oc /usr/local/bin/
# Start oc cluster
- oc cluster up
# Become cluster admin
- oc login -u system:admin
# Create example operator directory
- mkdir -p $GOPATH/src/github.com/example-inc

install: 
- go get -t -d ./...

script:
- make install
- go test ./pkg/...
- go test ./test/e2e/...
- cd test/test-framework
# test framework with defaults
- operator-sdk test -t .
# test operator-sdk test flags
- operator-sdk test -t . -g deploy/crd.yaml -n deploy/namespace-init.yaml -f "-parallel 1" -k $HOME/.kube/config
# go back to project root
- cd ../..
- go vet ./...
- ./hack/check_license.sh
- ./hack/check_error_case.sh

after_success:
- echo 'Build succeeded, operator was generated, memcached operator is running on minikube, and unit/integration tests pass'

after_failure:
- echo 'Build failed, operator failed to generate, memcached operator is not running on minikube, or unit/integration tests failed'
- kubectl get deployment
- kubectl get pods
- kubectl describe pods
