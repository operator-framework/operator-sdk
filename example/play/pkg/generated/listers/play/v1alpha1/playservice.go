/*
Copyright 2018 The play-operator Authors

Commercial software license.
*/
// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/coreos/play/pkg/apis/play/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PlayServiceLister helps list PlayServices.
type PlayServiceLister interface {
	// List lists all PlayServices in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PlayService, err error)
	// PlayServices returns an object that can list and get PlayServices.
	PlayServices(namespace string) PlayServiceNamespaceLister
	PlayServiceListerExpansion
}

// playServiceLister implements the PlayServiceLister interface.
type playServiceLister struct {
	indexer cache.Indexer
}

// NewPlayServiceLister returns a new PlayServiceLister.
func NewPlayServiceLister(indexer cache.Indexer) PlayServiceLister {
	return &playServiceLister{indexer: indexer}
}

// List lists all PlayServices in the indexer.
func (s *playServiceLister) List(selector labels.Selector) (ret []*v1alpha1.PlayService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PlayService))
	})
	return ret, err
}

// PlayServices returns an object that can list and get PlayServices.
func (s *playServiceLister) PlayServices(namespace string) PlayServiceNamespaceLister {
	return playServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PlayServiceNamespaceLister helps list and get PlayServices.
type PlayServiceNamespaceLister interface {
	// List lists all PlayServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PlayService, err error)
	// Get retrieves the PlayService from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PlayService, error)
	PlayServiceNamespaceListerExpansion
}

// playServiceNamespaceLister implements the PlayServiceNamespaceLister
// interface.
type playServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PlayServices in the indexer for a given namespace.
func (s playServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PlayService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PlayService))
	})
	return ret, err
}

// Get retrieves the PlayService from the indexer for a given namespace and name.
func (s playServiceNamespaceLister) Get(name string) (*v1alpha1.PlayService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("playservice"), name)
	}
	return obj.(*v1alpha1.PlayService), nil
}
